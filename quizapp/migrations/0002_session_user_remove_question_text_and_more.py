# Generated by Django 4.2.11 on 2024-10-30 05:39

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("quizapp", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="セッション開始日時"),
                ),
                (
                    "last_activity_at",
                    models.DateTimeField(auto_now=True, verbose_name="最終アクティビティ日時"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="メールアドレス"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="アカウント作成日時"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="quizapp_user_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="quizapp_user_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.RemoveField(model_name="question", name="text",),
        migrations.RemoveField(model_name="useranswer", name="correct_choice",),
        migrations.RemoveField(model_name="useranswer", name="is_correct",),
        migrations.RemoveField(model_name="useranswer", name="question",),
        migrations.RemoveField(model_name="useranswer", name="selected_choice",),
        migrations.AddField(
            model_name="question",
            name="correct_option",
            field=models.CharField(
                default="option1", max_length=255, verbose_name="正解の選択肢"
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="option1",
            field=models.CharField(
                default="default_option1", max_length=255, verbose_name="選択肢1"
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="option2",
            field=models.CharField(
                default="default_option2", max_length=255, verbose_name="選択肢2"
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="option3",
            field=models.CharField(
                default="default_option3", max_length=255, verbose_name="選択肢3"
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="option4",
            field=models.CharField(
                default="default_option4", max_length=255, verbose_name="選択肢4"
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="question_text",
            field=models.TextField(default="default_question_text", verbose_name="問題文"),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="answered_at",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="回答日時"
            ),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="answers",
            field=models.JSONField(default=dict, verbose_name="回答情報"),
        ),
        migrations.AlterField(
            model_name="question",
            name="explanation",
            field=models.TextField(verbose_name="解説"),
        ),
        migrations.DeleteModel(name="Choice",),
        migrations.AddField(
            model_name="session",
            name="current_question",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="quizapp.question",
                verbose_name="現在の問題ID",
            ),
        ),
        migrations.AddField(
            model_name="session",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="quizapp.user",
                verbose_name="ユーザーID",
            ),
        ),
        migrations.AlterField(
            model_name="useranswer",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="quizapp.user",
                verbose_name="ユーザーID",
            ),
        ),
    ]
